// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  userType        String   @map("user_type")
  lastName        String   @map("last_name")
  firstName       String   @map("first_name")
  lastNameKana    String   @map("last_name_kana")
  firstNameKana   String   @map("first_name_kana")
  lastNameRomaji  String   @map("last_name_romaji")
  firstNameRomaji String   @map("first_name_romaji")
  gender          String
  postalCode      String   @map("postal_code")
  address         String
  building        String?
  affiliation     String?
  affiliationDetail String? @map("affiliation_detail")
  schoolName      String?  @map("school_name")
  birthDate       DateTime @map("birth_date")
  phone           String
  photoUrl        String?  @map("photo_url")
  email           String   @unique
  password        String
  resetToken      String?  @map("reset_token")
  resetTokenExpiry DateTime? @map("reset_token_expiry")
  receiveNews     Boolean  @default(false) @map("receive_news")
  parentalConsent Boolean  @default(false) @map("parental_consent")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([email])
  @@index([userType])
  @@map("users")
}
